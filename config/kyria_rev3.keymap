/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp LEFT_ALT    &kp Q  &kp W  &kp E         &kp R      &kp T                                                   &kp Y          &kp U      &kp I         &kp O    &kp P     &kp LEFT_ALT
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F      &kp G                                                   &kp H          &kp J      &kp K         &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp GRAVE       &kp Z  &kp X  &kp C         &kp V      &kp B      &none      &tog 1   &caps_word  &none        &kp N          &kp M      &kp COMMA     &kp DOT  &kp FSLH  &kp BACKSLASH
                              &kp LEFT_GUI  &kp RCTRL  &kp SPACE  &lt 1 TAB  &kp ESC  &kp ESCAPE  &lt 1 ENTER  &kp BACKSPACE  &kp LCTRL  &kp LEFT_GUI
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans          &kp N1  &kp N2  &kp N3            &kp NUMBER_4       &kp N5                                        &kp NUMBER_6    &kp N7         &kp N8        &kp N9     &kp N0  &trans
&kp LEFT_SHIFT  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans                                        &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans  &kp LEFT_SHIFT
&bt BT_NXT      &trans  &trans  &kp MINUS         &kp EQUAL          &trans  &trans  &trans  &out OUT_TOG  &trans  &kp HOME        &kp PAGE_DOWN  &kp PG_UP     &kp END    &trans  &trans
                                &trans            &trans             &trans  &trans  &trans  &trans        &trans  &trans          &trans         &trans
            >;

            sensor-bindings =
                <&inc_dec_kp DOWN UP_ARROW>,
                <&inc_dec_kp LC(D) RC(U)>;
        };
    };
};
